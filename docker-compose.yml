services:
  # Spring Boot Auth Service with multi-stage Docker build
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    image: auth-service:latest
    container_name: auth-service
    restart: unless-stopped
    environment:
      # Database Configuration
      DB_URL: jdbc:postgresql://db:5432/usersdb
      DB_USERNAME: ${DB_USERNAME:-user}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      
      # JWT Configuration (REQUIRED)
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-3600000}
      JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION:-604800000}
      
      # Spring Configuration
      SPRING_PROFILES_ACTIVE: postgres
      
      # JVM Configuration
      JAVA_OPTS: >-
        -XX:+UseContainerSupport
        -XX:MaxRAMPercentage=75.0
        -XX:+UseG1GC
        -XX:+UseStringDeduplication
        -XX:+ExitOnOutOfMemoryError
        -XX:+HeapDumpOnOutOfMemoryError
        -XX:HeapDumpPath=/tmp/heapdump.hprof
        -Djava.security.egd=file:/dev/./urandom
        -Dfile.encoding=UTF-8
        -Duser.timezone=UTC
        -Djava.awt.headless=true
      
      # Application Configuration
      TZ: UTC
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - auth-network

  # PostgreSQL Database with optimized configuration
  db:
    image: postgres:15-alpine
    container_name: users-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: usersdb
      POSTGRES_USER: ${DB_USERNAME:-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      TZ: UTC
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d usersdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - pgdata:/var/lib/postgresql/data
      # Remove reference to deleted docker directory
      # - ./docker/init-multiple-databases.sql:/docker-entrypoint-initdb.d/01-init-multiple-databases.sql
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
    networks:
      - auth-network

networks:
  auth-network:
    driver: bridge

volumes:
  pgdata:
    driver: local
